<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "symbol.dtd">
<symbols>

    <blocks>
        <beginregex>{</beginregex>
        <endregex>}</endregex>
    </blocks>
    
    <symbol id="C Funtions" image="SymbolF()" indentation="1" ignoreblocks="yes" useforautocomplete="yes">
        <regex>(?&lt;=[\n\r]|^)(?:[\w0-9_*]+\s+){1,3}[\w0-9_*]+[ \t]*\([\]\[\w0-9_,\s*&amp;/]*\)(?=\s*\{)</regex>
        <postprocess>
            <find>\([^\)]*\)</find>
            <replace>()</replace>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
    </symbol>
	
    <symbol id="FunctionRegex" color="#003369" useforautocomplete="yes" hidden="yes" image="SymbolF()" scope="language.function.c">
		<regex>([A-Za-z0-9_]+ *)\(</regex>
    </symbol>

    <symbol id="Pragma Marks" font-weight="bold" image="Symbol#" indentation="0" ignoreblocks="yes" show-in-comments="yes">
        <regex>(#pragma mark[	 -]*[^\n]*)\n</regex>
        <postprocess>
            <find>#pragma mark[-	 \n]*</find> <!-- An empty string places a separator -->
            <replace></replace>
        </postprocess>
    </symbol>

    <symbol id="Defines" indentation="0" ignoreblocks="yes">
        <regex>#define[ \t]*([\w\d()]*)[ \t]+[^\n\r]*[\n\r]</regex>
    </symbol>

    <symbol id="CVS/SVN conflict" font-weight="bold" image="SymbolWarn" indentation="0" ignoreblocks="no">
        <regex>^&lt;&lt;&lt;&lt;&lt;&lt;&lt;([\n\r]|.)*?======([\n\r]|.)*?&gt;&gt;&gt;&gt;&gt;&gt;&gt;</regex>
        <postprocess>
            <find>.*</find>
            <replace>Versioning conflict!</replace>
        </postprocess>
    </symbol>
	
	<symbol id="User Variables" useforautocomplete="yes" scope="language.variable.ruby" hidden="yes" image="SymbolsV">
		<regex>(\w+)[^=]=</regex>
        <postprocess>
            <find>[\s|\t|=]</find>
            <replace></replace>
        </postprocess>
	</symbol>
	
	<symbol id="Auto-Complete" useforautocomplete="yes" hidden="yes" scope="language">
		<regex>([A-z0-9_]+)</regex>
	</symbol>

</symbols>